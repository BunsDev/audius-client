commands:
    pr-comment:
        parameters:
            comment:
                description: The comment to add to the PR
                type: string
            maxComments:
                default: 1
                description: Max nb of comments per PR
                type: integer
            pr:
                default: $CIRCLE_PULL_REQUEST
                description: The PR number or URL
                type: string
        steps:
            - run:
                command: sudo apt-get update && sudo apt-get install -y --force-yes ruby-full
                name: Install Ruby
            - run:
                command: |
                    curl -sL https://raw.githubusercontent.com/stephencelis/ghi/master/ghi > ghi
                    chmod 755 ghi
                    sudo mv ghi /usr/local/bin
                name: Install GHI
            - run:
                command: |
                    if [[ -z "${GHI_TOKEN}" ]]; then
                      echo "GHI_TOKEN not set"
                      /bin/false
                    fi
                name: Check Token
            - run:
                command: |
                    GH_LOGIN=$(curl -sS https://api.github.com/user\?access_token\=$GHI_TOKEN | jq '.login' --raw-output)
                    echo "Authenticated with $GH_LOGIN"
                    PR_URL=<< parameters.pr >>
                    PR_ID=${PR_URL##*/}
                    echo "PR_ID=$PR_ID"
                    if [ -z $PR_ID ]; then
                      echo "No PR found, skipping"
                    else
                      if [ $(ghi comment --list $PR_ID | grep -c $GH_LOGIN) -ge << parameters.maxComments >> ]; then
                        echo "Already commented, skip"
                      else
                        ghi comment -m "<< parameters.comment >>"  $PR_ID
                      fi
                    fi
                name: Send Comment
jobs:
    build-demo:
        docker:
            - image: circleci/node:14.18
        resource_class: large
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: export PUBLIC_URL=/${CIRCLE_BRANCH} && npm run build:stage && mv build-staging build-demo
                name: build-demo
            - persist_to_workspace:
                paths:
                    - build-demo
                root: ./
        working_directory: ~/audius-client
    build-ipfs-production:
        docker:
            - image: circleci/node:14.18
        resource_class: large
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm run build:ipfs-prod
                name: build-ipfs-production
            - run:
                command: zip -r build-ipfs-production.zip ./build-ipfs-production
                name: zip build
            - persist_to_workspace:
                paths:
                    - build-ipfs-production.zip
                root: ./
        working_directory: ~/audius-client
    build-ipfs-staging:
        docker:
            - image: circleci/node:14.18
        resource_class: large
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm run build:ipfs-stage
                name: build-ipfs-staging
            - run:
                command: zip -r build-ipfs-staging.zip ./build-ipfs-staging
                name: zip build-ipfs-staging
            - persist_to_workspace:
                paths:
                    - build-ipfs-staging.zip
                root: ./
        working_directory: ~/audius-client
    build-mobile-production:
        docker:
            - image: circleci/node:14.18
        resource_class: large
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm run build:mobile-prod
                name: build-mobile-production
            - persist_to_workspace:
                paths:
                    - build-mobile-production
                root: ./
        working_directory: ~/audius-client
    build-mobile-staging:
        docker:
            - image: circleci/node:14.18
        resource_class: large
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm run build:mobile-stage
                name: build-mobile-staging
            - persist_to_workspace:
                paths:
                    - build-mobile-staging
                root: ./
        working_directory: ~/audius-client
    build-production:
        docker:
            - image: circleci/node:14.18
        resource_class: large
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm run build:prod-source-maps
                name: build-production
            - persist_to_workspace:
                paths:
                    - build-production
                root: ./
        working_directory: ~/audius-client
    build-staging:
        docker:
            - image: circleci/node:14.18
        resource_class: large
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm run build:stage
                name: build-staging
            - persist_to_workspace:
                paths:
                    - build-staging
                root: ./
        working_directory: ~/audius-client
    deploy-demo:
        docker:
            - image: circleci/python:2.7-jessie
        steps:
            - checkout
            - run:
                command: sudo pip install awscli
                name: install-awscli
            - attach_workspace:
                at: ./
            - run:
                command: aws s3 sync build-demo s3://frontend-demo.audius.co/${CIRCLE_BRANCH} --delete --cache-control max-age=0
                name: Deploy to S3
            - pr-comment:
                comment: Preview this change https://demo.audius.co/${CIRCLE_BRANCH}
        working_directory: ~/audius-client
    deploy-ipfs-production:
        docker:
            - image: circleci/python:2.7-jessie
        steps:
            - run:
                command: sudo pip install awscli
                name: install-awscli
            - attach_workspace:
                at: ./
            - run:
                command: aws s3 cp build-ipfs-production.zip s3://audius-site-ipfs/build-ipfs-production.zip
                name: Deploy to S3
        working_directory: ~/audius-client
    deploy-ipfs-staging:
        docker:
            - image: circleci/python:2.7-jessie
        steps:
            - run:
                command: sudo pip install awscli
                name: install-awscli
            - attach_workspace:
                at: ./
            - run:
                command: aws s3 cp build-ipfs-staging.zip s3://audius-site-ipfs/build-ipfs-staging.zip
                name: Deploy to S3
        working_directory: ~/audius-client
    deploy-mobile-production:
        docker:
            - image: circleci/python:2.7-jessie
        steps:
            - run:
                command: sudo pip install awscli
                name: install-awscli
            - attach_workspace:
                at: ./
            - run:
                command: aws s3 sync build-mobile-production s3://audius-mobile/build --delete
                name: Deploy to S3
        working_directory: ~/audius-client
    deploy-mobile-staging:
        docker:
            - image: circleci/python:2.7-jessie
        steps:
            - run:
                command: sudo pip install awscli
                name: install-awscli
            - attach_workspace:
                at: ./
            - run:
                command: aws s3 sync build-mobile-staging s3://audius-mobile-staging/build --delete
                name: Deploy to S3
        working_directory: ~/audius-client
    deploy-production-cloudflare:
        docker:
            - image: circleci/node:14.18
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm install @cloudflare/wrangler
                name: install wrangler
            - run:
                command: |
                    cd scripts/workers-site
                    npm i
                    cd ../../
                    mv build-production build
                    cp ./resources/apple-app-site-association build
                    cp ./robots.txt build
                    echo ${GA_ACCESS_TOKEN} | npx wrangler secret put GA_ACCESS_TOKEN --env production
                    npx wrangler publish --env production
                name: Deploy to Cloudflare
        working_directory: ~/audius-client
    deploy-production-s3:
        docker:
            - image: circleci/python:2.7-jessie
        steps:
            - checkout
            - run:
                command: sudo pip install awscli
                name: install-awscli
            - attach_workspace:
                at: ./
            - run:
                command: |
                    aws s3 sync --exclude "*.map" --exclude ./resources/apple-app-site-association --exclude robots.txt --exclude "sitemaps/*" build-production s3://audius.co --delete --cache-control max-age=604800
                    aws s3 cp s3://audius.co/index.html s3://audius.co/index.html --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html --metadata-directive REPLACE --acl public-read
                    aws s3 cp ./resources/apple-app-site-association s3://audius.co --cache-control max-age=0 --content-type 'application/json' --metadata-directive REPLACE
                    aws s3 cp robots.txt s3://audius.co --cache-control max-age=0 --content-type 'application/json' --metadata-directive REPLACE
                name: Deploy to S3
            - run:
                command: aws cloudfront create-invalidation --distribution-id E1ZJ9Z971FJQJ8 --paths "/*"
                name: Invalidate cache
        working_directory: ~/audius-client
    deploy-release-candidate:
        docker:
            - image: circleci/node:14.18
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm install @cloudflare/wrangler
                name: install wrangler
            - run:
                command: |
                    cd scripts/workers-site
                    npm i
                    cd ../../
                    mv build-production build
                    cp ./resources/apple-app-site-association build
                    cp ./robots.txt build
                    echo ${GA_ACCESS_TOKEN} | npx wrangler secret put GA_ACCESS_TOKEN --env release
                    npx wrangler publish --env release
                name: Deploy to Cloudflare
        working_directory: ~/audius-client
    deploy-sentry-sourcemaps:
        docker:
            - image: circleci/node:14.18
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm install @sentry/cli
                name: install-sentry-cli
            - run:
                command: node_modules/.bin/sentry-cli --auth-token ${SENTRY_AUTH_TOKEN} releases --org audius --project audius-client new ${CIRCLE_SHA1}
                name: cut-sentry-release
            - run:
                command: node_modules/.bin/sentry-cli --auth-token ${SENTRY_AUTH_TOKEN} releases --org audius --project audius-client files ${CIRCLE_SHA1} upload-sourcemaps --no-rewrite build-production
                name: upload-sourcemaps
            - run:
                command: node_modules/.bin/sentry-cli --auth-token ${SENTRY_AUTH_TOKEN} releases --org audius --project audius-client finalize ${CIRCLE_SHA1}
                name: finalize-release
        working_directory: ~/audius-client
    deploy-staging-cloudflare:
        docker:
            - image: circleci/node:14.18
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm install @cloudflare/wrangler
                name: install wrangler
            - run:
                command: |
                    cd scripts/workers-site
                    npm i
                    cd ../../
                    mv build-staging build
                    cp ./resources/apple-app-site-association build
                    echo ${GA_ACCESS_TOKEN} | npx wrangler secret put GA_ACCESS_TOKEN --env staging
                    npx wrangler publish --env staging
                name: Deploy to Cloudflare
        working_directory: ~/audius-client
    deploy-staging-s3:
        docker:
            - image: circleci/python:2.7-jessie
        steps:
            - checkout
            - run:
                command: sudo pip install awscli
                name: install-awscli
            - attach_workspace:
                at: ./
            - run:
                command: |
                    aws s3 sync --exclude ./resources/apple-app-site-association --exclude "sitemaps/*" build-staging s3://staging.audius.co --delete --cache-control max-age=0
                    aws s3 cp ./resources/apple-app-site-association s3://staging.audius.co --cache-control max-age=0 --content-type 'application/json' --metadata-directive REPLACE
                name: Deploy to S3
        working_directory: ~/audius-client
    dist-linux-production:
        docker:
            - image: electronuserland/builder
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm run dist:linux-publish-production
                name: distribute
        working_directory: ~/audius-client
    dist-linux-staging:
        docker:
            - image: electronuserland/builder
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm run dist:linux-publish
                name: distribute
        working_directory: ~/audius-client
    dist-mac-production:
        macos:
            xcode: 12.2.0
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm run dist:mac-publish-production
                name: distribute
        working_directory: ~/audius-client
    dist-mac-staging:
        macos:
            xcode: 12.2.0
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm run dist:mac-publish
                name: distribute
        working_directory: ~/audius-client
    dist-win-production:
        docker:
            - image: electronuserland/builder:wine-mono
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm run dist:win-publish-production
                name: distribute
        working_directory: ~/audius-client
    dist-win-staging:
        docker:
            - image: electronuserland/builder:wine-mono
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm run dist:win-publish
                name: distribute
        working_directory: ~/audius-client
    init:
        docker:
            - image: circleci/node:14.18
        steps:
            - checkout
            - restore_cache:
                keys:
                    - dependency-cache-{{ checksum "package.json" }}
                    - dependency-cache-
            - run: rm -rf /home/circleci/audius-client/node_modules/websocket/.git
            - run: echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" > .npmrc
            - run: npm install --ignore-scripts
            - save_cache:
                key: dependency-cache-{{ checksum "package.json" }}
                paths:
                    - ./node_modules
            - run:
                command: npm run lint
                name: lint
            - run:
                command: npm test
                name: test
            - persist_to_workspace:
                paths:
                    - node_modules
                root: ./
        working_directory: ~/audius-client
    publish-github-release:
        docker:
            - image: cibuilds/github:0.10
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: |
                    VERSION=$(grep -m1 version ./package.json | awk -F: '{ print $2 }' | sed 's/[", ]//g')
                    echo "$VERSION"
                    ghr -t ${GHI_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./
                name: Publish Release on GitHub
        working_directory: ~/audius-client
    publish-production-build-cids:
        docker:
            - image: circleci/python:2.7-jessie
        steps:
            - run:
                command: sudo pip install awscli
                name: install-awscli
            - attach_workspace:
                at: ./
            - run:
                command: aws s3 cp build_cid.txt s3://audius-site-ipfs/build_cid_production.txt
                name: Push to S3
        working_directory: ~/audius-client
    publish-staging-build-cids:
        docker:
            - image: circleci/python:2.7-jessie
        steps:
            - run:
                command: sudo pip install awscli
                name: install-awscli
            - attach_workspace:
                at: ./
            - run:
                command: aws s3 cp build_cid.txt s3://audius-site-ipfs/build_cid_staging.txt
                name: Push to S3
        working_directory: ~/audius-client
    test-staging:
        docker:
            - image: circleci/node:14.18-browsers
        resource_class: large
        steps:
            - run:
                command: |
                    mkdir -p ~/.ssh && touch ~/.ssh/config && echo $'Host github.com\n\tStrictHostKeyChecking no' > ~/.ssh/config
                    git clone git@github.com:AudiusProject/probers.git
                    cd probers
                name: download probers
            - restore_cache:
                keys:
                    - probers-dependency-cache-{{ checksum "probers/package.json" }}
                    - probers-dependency-cache-
            - run:
                command: |
                    cd probers
                    npm install
                name: install probers dependencies
            - save_cache:
                key: probers-dependency-cache-{{ checksum "probers/package.json" }}
                paths:
                    - ./probers/node_modules
            - attach_workspace:
                at: ./
            - run:
                command: |
                    npm install serve
                    node node_modules/serve/bin/serve.js -l 3001 -s build-staging &
                    cd probers
                    npm run test:ci
                name: serve and run prober tests
        working_directory: ~/
    update-ipfs-production-records:
        docker:
            - image: circleci/node:14.18
        steps:
            - attach_workspace:
                at: ./
            - run:
                command: |
                    DNS_NAME=_dnslink.ipfs.audius.co
                    CID=$(cat ./build_cid.txt)
                    curl -X PUT "https://api.cloudflare.com/client/v4/zones/${CLOUDFLARE_AUDIUS_CO_ZONE}/dns_records/${CLOUDFLARE_PROD_SITE_IPFS_DNS_ID}" \
                      -H "X-Auth-Email: ${CLOUDFLARE_AUTH_EMAIL}" \
                      -H "Authorization: Bearer ${CLOUDFLARE_AUTH_KEY}" \
                      -H "Content-Type: application/json" \
                      --data '{"type":"TXT","name":"'"$DNS_NAME"'","content":"\"dnslink=/ipfs/'"$CID"'\"","ttl":1,"proxied":false}'
                name: Update Cloudflare records
        working_directory: ~/audius-client
    update-ipfs-staging-records:
        docker:
            - image: circleci/node:14.18
        steps:
            - attach_workspace:
                at: ./
            - run:
                command: |
                    DNS_NAME=_dnslink.ipfs.staging.audius.co
                    CID=$(cat ./build_cid.txt)
                    curl -X PUT "https://api.cloudflare.com/client/v4/zones/${CLOUDFLARE_AUDIUS_CO_ZONE}/dns_records/${CLOUDFLARE_STAGE_SITE_IPFS_DNS_ID}" \
                      -H "X-Auth-Email: ${CLOUDFLARE_AUTH_EMAIL}" \
                      -H "Authorization: Bearer ${CLOUDFLARE_AUTH_KEY}" \
                      -H "Content-Type: application/json" \
                      --data '{"type":"TXT","name":"'"$DNS_NAME"'","content":"\"dnslink=/ipfs/'"$CID"'\"","ttl":1,"proxied":false}'
                name: Update Cloudflare records
        working_directory: ~/audius-client
    update-production-ga-ipfs-build:
        docker:
            - image: circleci/node:14.18
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm run update-ipfs-build:prod
                name: update ipfs build in ga
            - persist_to_workspace:
                paths:
                    - ./build_cid.txt
                root: ./
        working_directory: ~/audius-client
    update-staging-ga-ipfs-build:
        docker:
            - image: circleci/node:14.18
        steps:
            - checkout
            - attach_workspace:
                at: ./
            - run:
                command: npm run update-ipfs-build:stage
                name: update ipfs build in ga
            - persist_to_workspace:
                paths:
                    - ./build_cid.txt
                root: ./
        working_directory: ~/audius-client
parameters:
    run-mobile-job:
        default: false
        type: boolean
    run-web-job:
        default: false
        type: boolean
version: 2.1
workflows:
    version: 2.1
    web:
        jobs:
            - init
            - build-demo:
                filters:
                    branches:
                        ignore: /^master$/
                requires:
                    - init
            - deploy-demo:
                context: Audius Client
                filters:
                    branches:
                        ignore: /^master$/
                requires:
                    - build-demo
            - build-staging:
                requires:
                    - init
            - build-production:
                filters:
                    branches:
                        only: /(^master)|(^hotfix.*)|(^release.*)$/
                requires:
                    - init
            - test-staging:
                context: Audius Client
                requires:
                    - build-staging
            - deploy-staging-s3:
                context: Audius Client
                filters:
                    branches:
                        only: /^master$/
                requires:
                    - build-staging
            - deploy-staging-cloudflare:
                context: Audius Client
                filters:
                    branches:
                        only: /^master$/
                requires:
                    - build-staging
            - deploy-release-candidate:
                context: Audius Client
                filters:
                    branches:
                        only: /(^hotfix.*)|(^release.*)$/
                requires:
                    - init
                    - build-production
            - hold-staging:
                filters:
                    branches:
                        only: /(^hotfix.*)$/
                requires:
                    - init
                    - build-staging
                type: approval
            - deploy-staging-cloudflare:
                context: Audius Client
                filters:
                    branches:
                        only: /(^hotfix.*)$/
                requires:
                    - init
                    - hold-staging
            - build-mobile-staging:
                filters:
                    branches:
                        only: /^master$/
                requires:
                    - init
            - deploy-mobile-staging:
                context: Audius Client
                filters:
                    branches:
                        only: /^master$/
                requires:
                    - build-mobile-staging
            - build-ipfs-staging:
                filters:
                    branches:
                        only: /^master$/
                requires:
                    - init
            - deploy-ipfs-staging:
                context: Audius Client
                filters:
                    branches:
                        only: /^master$/
                requires:
                    - build-ipfs-staging
            - hold-update-staging-ga-ipfs-build:
                filters:
                    branches:
                        only: /^master$/
                requires:
                    - deploy-ipfs-staging
                type: approval
            - update-staging-ga-ipfs-build:
                context:
                    - Audius Client
                    - Pinata
                filters:
                    branches:
                        only: /^master$/
                requires:
                    - hold-update-staging-ga-ipfs-build
            - publish-staging-build-cids:
                context:
                    - Audius Client
                filters:
                    branches:
                        only: /^master$/
                requires:
                    - update-staging-ga-ipfs-build
            - hold-update-ipfs-staging-records:
                filters:
                    branches:
                        only: /^master$/
                requires:
                    - update-staging-ga-ipfs-build
                type: approval
            - update-ipfs-staging-records:
                context:
                    - Audius Client
                    - Cloudflare API
                filters:
                    branches:
                        only: /^master$/
                requires:
                    - hold-update-ipfs-staging-records
            - build-mobile-production:
                filters:
                    branches:
                        only: /(^release.*)$/
                requires:
                    - init
            - deploy-mobile-production:
                context: Audius Client
                filters:
                    branches:
                        only: /(^release.*)$/
                requires:
                    - build-mobile-production
            - hold-production:
                filters:
                    branches:
                        only: /(^master)|(^hotfix.*)|(^release.*)$/
                requires:
                    - build-production
                type: approval
            - deploy-production-s3:
                context: Audius Client
                filters:
                    branches:
                        only: /(^master)|(^hotfix.*)|(^release.*)$/
                requires:
                    - hold-production
            - deploy-production-cloudflare:
                context: Audius Client
                filters:
                    branches:
                        only: /(^master)|(^hotfix.*)|(^release.*)$/
                requires:
                    - hold-production
            - deploy-sentry-sourcemaps:
                context: Audius Client
                filters:
                    branches:
                        only: /(^master)|(^hotfix.*)|(^release.*)$/
                requires:
                    - deploy-production-s3
            - publish-github-release:
                context: Audius Client
                filters:
                    branches:
                        only: /(^master)|(^hotfix.*)|(^release.*)$/
                requires:
                    - hold-production
            - build-ipfs-production:
                filters:
                    branches:
                        only: /(^release.*)$/
                requires:
                    - init
            - deploy-ipfs-production:
                context: Audius Client
                filters:
                    branches:
                        only: /(^release.*)$/
                requires:
                    - build-ipfs-production
            - hold-update-production-ga-ipfs-build:
                filters:
                    branches:
                        only: /(^release.*)$/
                requires:
                    - deploy-ipfs-production
                type: approval
            - update-production-ga-ipfs-build:
                context:
                    - Audius Client
                    - Pinata
                filters:
                    branches:
                        only: /(^release.*)$/
                requires:
                    - hold-update-production-ga-ipfs-build
            - publish-production-build-cids:
                context:
                    - Audius Client
                filters:
                    branches:
                        only: /(^release.*)$/
                requires:
                    - update-production-ga-ipfs-build
            - hold-update-ipfs-production-records:
                filters:
                    branches:
                        only: /(^release.*)$/
                requires:
                    - update-production-ga-ipfs-build
                type: approval
            - update-ipfs-production-records:
                context:
                    - Audius Client
                    - Cloudflare API
                filters:
                    branches:
                        only: /(^release.*)$/
                requires:
                    - hold-update-ipfs-production-records
            - hold-dist-mac-staging:
                filters:
                    branches:
                        only: /(^master)|(^bounce.*)$/
                requires:
                    - build-staging
                type: approval
            - dist-mac-staging:
                context: Audius Client
                filters:
                    branches:
                        only: /(^master)|(^bounce.*)$/
                requires:
                    - hold-dist-mac-staging
            - hold-dist-win-staging:
                filters:
                    branches:
                        only: /(^master)|(^bounce.*)$/
                requires:
                    - build-staging
                type: approval
            - dist-win-staging:
                context: Audius Client
                filters:
                    branches:
                        only: /(^master)|(^bounce.*)$/
                requires:
                    - hold-dist-win-staging
            - hold-dist-linux-staging:
                filters:
                    branches:
                        only: /(^master)|(^bounce.*)$/
                requires:
                    - build-staging
                type: approval
            - dist-linux-staging:
                context: Audius Client
                filters:
                    branches:
                        only: /(^master)|(^bounce.*)$/
                requires:
                    - hold-dist-linux-staging
            - hold-dist-mac-production:
                filters:
                    branches:
                        only: /(^master)|(^hotfix.*)|(^release.*)$/
                requires:
                    - build-production
                type: approval
            - dist-mac-production:
                context: Audius Client
                filters:
                    branches:
                        only: /(^master)|(^hotfix.*)|(^release.*)$/
                requires:
                    - hold-dist-mac-production
            - hold-dist-win-production:
                filters:
                    branches:
                        only: /(^master)|(^hotfix.*)|(^release.*)$/
                requires:
                    - build-production
                type: approval
            - dist-win-production:
                context: Audius Client
                filters:
                    branches:
                        only: /(^master)|(^hotfix.*)|(^release.*)$/
                requires:
                    - hold-dist-win-production
            - hold-dist-linux-production:
                filters:
                    branches:
                        only: /(^master)|(^hotfix.*)|(^release.*)$/
                requires:
                    - build-production
                type: approval
            - dist-linux-production:
                context: Audius Client
                filters:
                    branches:
                        only: /(^master)|(^hotfix.*)|(^release.*)$/
                requires:
                    - hold-dist-linux-production
        when: << pipeline.parameters.run-web-job >>

